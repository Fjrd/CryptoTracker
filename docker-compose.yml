version: '3.9'
services:

  #ApiGateway
  gateway:
    container_name: api-gateway-service
    image: api-gateway-service:0.0.1
    build:
      context: api-gateway
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - SERVER_PORT=8080
      - CUSTOMERS_HOST=http://customers-service:8081
      - COIN_STORE_HOST=http://coin-store-service:8082

  #Customers
  customers:
    container_name: customers-service
    image: customers-service:0.0.1
    build:
      context: customers-service
      dockerfile: Dockerfile
    depends_on:
      - postgres-customers
    ports:
      - 8081:8081
    environment:
      - SERVER_PORT=8081
      - POSTGRES_URL=jdbc:postgresql://pg-customers-db:5432/postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  #CoinStore
  coin-store:
    container_name: coin-store-service
    image: coin-store-service:0.0.1
    build:
      context: coin-store
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - postgres-coin-store
    ports:
    - 8082:8082
    environment:
      - SERVER_PORT=8082
      - POSTGRES_URL=jdbc:postgresql://pg-coin-store-db:5432/postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - KAFKA_HOST_NAME=nf-kafka:9092
      - CANDLE_STREAM_TOPIC=CandleTopic

  #Pipeline
  pipeline:
    container_name: pipeline
    image: pipeline:0.0.1
    build:
      context: rht.candles-pipeline
      dockerfile: Dockerfile
    depends_on:
      - kafka
    environment:
      - topic_server=CandleTopic
      - bootstrap_server=nf-kafka:9092

  #Kafka
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: nf-zookeeper
    expose:
      - 2181
    volumes:
      - zookeeper-data:/data
      - zookeeper-datalog:/datalog

  kafka:
    image: wurstmeister/kafka
    container_name: nf-kafka
    ports:
      - 9093:9093
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: unless-stopped
    volumes:
      - kafka:/kafka

  #Customers DataBase
  postgres-customers:
    container_name: pg-customers-db
    image: postgres:alpine3.14
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    restart: unless-stopped
    volumes:
      - pg-customers-data:/var/lib/postgresql/data/

  #Coin store DataBase
  postgres-coin-store:
    container_name: pg-coin-store-db
    image: postgres:alpine3.14
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    restart: unless-stopped
    volumes:
      - pg-coin-store-data:/var/lib/postgresql/data/

volumes:
  kafka:
  zookeeper-data:
  zookeeper-datalog:
  pg-coin-store-data:
  pg-customers-data:

